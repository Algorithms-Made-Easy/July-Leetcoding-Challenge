class Solution {
    public int[] singleNumber(int[] nums) {
        Set<Integer> st=new HashSet<>();
        for(int i:nums){
            if(!st.add(i)){
                st.remove(i);
            }
        }
        
        int[] res=new int[2];
        int k=0;
        for(int i: st){
            res[k++]=i;
        }
        return res;
    }
}

class Solution {
  public int[] singleNumber(int[] nums) {
    // difference between two numbers (x and y) which were seen only once
    int bitmask = 0;
    for (int num : nums) bitmask ^= num;

    // rightmost 1-bit diff between x and y
    int diff = bitmask & (-bitmask);

    int x = 0;
    // bitmask which will contain only x
    for (int num : nums) if ((num & diff) != 0) x ^= num;

    return new int[]{x, bitmask^x};
  }
}
