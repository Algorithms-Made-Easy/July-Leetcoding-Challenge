
public class Solution {
    // you need treat n as an unsigned value
    public int reverseBits(int n) {
        boolean isSigned = false;
        if(n < 0)
            isSigned = true;
        int result = 0;
        int i = 0;
        while (i < 31) {
            result = result | (n & 1);
            n = n >> 1;
            result = result << 1;
            i++;
        }
     return isSigned ? result | 1 : result;
    }
}


public class Solution {
    // you need treat n as an unsigned value
    public int reverseBits(int n) {

        Long number = Long.decode(0xff00ff00);
        System.out.println(number);
        
        n = (n >> 16) | (n << 16);
        n = ((n & 0xff00ff00) >> 8) | ((n & 0x00ff00ff) << 8);
        n = ((n & 0xf0f0f0f0) >> 4) | ((n & 0x0f0f0f0f) << 4);
        n = ((n & 0xcccccccc) >> 2) | ((n & 0x33333333) << 2);
        n = ((n & 0xaaaaaaaa) >> 1) | ((n & 0x55555555) << 1);
        return n;
    }
}
